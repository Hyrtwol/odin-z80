//+build windows
package test_z80 // generated by codegen

import "core:testing"
import sut ".."

@(test)
verify_type_sizes :: proc(t: ^testing.T) {
	// integral.h
	expect_size(t, sut.zusize, 8)
	expect_size(t, sut.zuint8, 1)
	expect_size(t, sut.zuint16, 2)
	expect_size(t, sut.zuint32, 4)
	expect_size(t, sut.zint16, 2)
	expect_size(t, sut.zint32, 4)
	expect_size(t, sut.zboolean, 1)
	expect_size(t, sut.zcontext, 8)
	// Z80.h
	expect_value(t, sut.Z80_MAXIMUM_CYCLES_PER_STEP, 0x00000019)
	expect_value(t, sut.Z80_MINIMUM_CYCLES_PER_STEP, 0x00000004)
	expect_value(t, sut.Z80_HOOK, 0x00000064)
	expect_value(t, sut.Z80_SF, 0x00000080)
	expect_value(t, sut.Z80_ZF, 0x00000040)
	expect_value(t, sut.Z80_YF, 0x00000020)
	expect_value(t, sut.Z80_HF, 0x00000010)
	expect_value(t, sut.Z80_XF, 0x00000008)
	expect_value(t, sut.Z80_PF, 0x00000004)
	expect_value(t, sut.Z80_NF, 0x00000002)
	expect_value(t, sut.Z80_CF, 0x00000001)
	expect_size(t, sut.Z80, 208)
	expect_value(t, sut.Z80_OPTION_OUT_VC_255, 0x00000001)
	expect_value(t, sut.Z80_OPTION_LD_A_IR_BUG, 0x00000002)
	expect_value(t, sut.Z80_OPTION_HALT_SKIP, 0x00000004)
	expect_value(t, sut.Z80_OPTION_XQ, 0x00000008)
	expect_value(t, sut.Z80_OPTION_IM0_RETX_NOTIFICATIONS, 0x00000010)
	expect_value(t, sut.Z80_OPTION_YQ, 0x00000020)
	expect_value(t, sut.Z80_MODEL_ZILOG_NMOS, 0x0000002A)
	expect_value(t, sut.Z80_MODEL_ZILOG_CMOS, 0x00000029)
	expect_value(t, sut.Z80_MODEL_NEC_NMOS, 0x00000002)
	expect_value(t, sut.Z80_MODEL_ST_CMOS, 0x00000023)
	expect_value(t, sut.Z80_REQUEST_REJECT_NMI, 0x00000002)
	expect_value(t, sut.Z80_REQUEST_NMI, 0x00000004)
	expect_value(t, sut.Z80_REQUEST_INT, 0x00000008)
	expect_value(t, sut.Z80_REQUEST_SPECIAL_RESET, 0x00000010)
	expect_value(t, sut.Z80_RESUME_HALT, 0x00000001)
	expect_value(t, sut.Z80_RESUME_XY, 0x00000002)
	expect_value(t, sut.Z80_RESUME_IM0_XY, 0x00000003)
	expect_value(t, sut.Z80_HALT_EXIT_EARLY, 0x00000002)
	expect_value(t, sut.Z80_HALT_CANCEL, 0x00000003)
}
